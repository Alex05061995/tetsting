Вопрос 1 Отличия плохой верстки от хорошей: 

1) Со стороны пользователя: верстка должна быть простой и понятной, без различных сложных анимаций и прежде всего доступная для людей с огранниченными возможностями(возможность чтения сайта голосовым помощником);
2) Со стороны менеджера проектов: не имею представления, с такими людьми не приходилось сталкиваться. Но, мне кажется, главное ему срок сдачи работы не завалить, остальное второстепенно);
3) Со стороны дизайнера: Верстка должна быть строго структурированная и иметь четкий размеры, имень описание шрифтов, цветов и тп. Обзятельно выполнен дизайн всех интерактивных элементов и выполнены адаптивы.
3) Со стороны верстальщика: Проект разбит на мелкие компоненты, чтоб было возможно их периспользовать. Соблюдены правила верстки(отступы, валиданый код и тп). Верстка оптимизированная (сжаты картинки шрифты, файлы).
Минимум сторонних библиотелек. По возможности использован сборщик при верстке, т.к. это значительно экономит время. Семантика и адаптивность;
4) Ну тут впринципе тоже самое, что и по верстальщику. Считаю, что щас чистых верстальщиков нет), везде знание фронта требуется;
5) Ну для бекендера мне кажется это второстепенно. Тут ответ сложно дать.

Вопрос 2 Основные особенности верстки крупных многостраничных сайтов:

Проект разбит на мелкие части(HTML,СSS, JS, картинки, шрифты и тп). Шриты, цвета, отступы и прочие мелкие вещи желательно сводить в переменные(миксины и тп), т.к, если заказчику, что-то не понраваиться, то легче будт исправить. 
Желательно соблюдение едионобразия во всем. 

Вопрос 3 Особенности верстки сайтов, которые должны одинаково хорошо отображаться:

При вертке обнулять стили, использовать Normilaze(оч хорошо помогат для единообразия стилей и кроссбраузерности). Babel(для js). Современные форматы изображений. Люблю использовать форматы изображений svg, т.к меньше мороки
по верстке для Retina дисплеев(у которых пикселей больше, чем у других дисплеев). Обязательно делать адаптивную резиновую верстку, что помогает подстраиваться под различные размеры экранов(media queries).

Вопрос 4 Расскажите, какие инструменты помогают вам экономить время в процессе написания, проверки и отладки кода:

Ну тут приходят на помощь различные сборщики. В верстке я пользовался GULP, для JS webpack. Иногда помогает bootstrap, но стараюсь избегать тяжеловестных библиотек, хотя иногда от туда подворовываю реализации. UI KIT.

Вопрос 5 Вам нужно понять, почему страница отображается некорректно в Safari на iOS и в IE на Windows. Код писали не вы, доступа к исходникам у вас нет. Ваши действия? Сталкивались ли вы с подобными проблемами на практике?

На практике нет. Ну тут строит прям сразу проверять кроссбраузерность. Существуют различные инструменты для оценки кроссбраузерности. После того, как это выеснится можно подменять и там уже по факту менять или дополнять свойства;

Вопрос 6 Дизайнер отдал вам макет, в котором не показано, как должны выглядеть интерактивные элементы при наведении мыши. Ваши действия?

Отдам на доработку, такое в современном дизайне обязательно должно быть учтено и пока буду верстать без этого, а после исправления дизайнера дополню верстку.

Вопрос 7 

1) Learn JS, стаковерфлов, кодварс, mdn;
2) Мне больше близко JS программирование, верстка это очень нудно и долго(над одним элементом можно целый день просидеть и ничего не добиться). Js очень разносторонне и поинтресней. 
3) Английский. 

Вопрос 8

Меня зовут александр 27 лет, програмиированием интересуюсь 2 года(самоучка, курсы и тп). Опыта в этой сфере к сожалению не имею, но очень хочу его получить. 
Ссылка на резюме там все есть: https://orel.hh.ru/resume/14ba3e55ff02a18df90039ed1f794c696d6d6f;

ДЛЯ  ВТОРОГО ЗАДАНИЯ Я ИСПОЛЬЗОВАЛ ЧИСТЫЙ CSS, JS, HTML. ХОТЯ МОГУ И СО СБОРЩИКОМ СДЕЛАТЬ И НА РЕАКТЕ